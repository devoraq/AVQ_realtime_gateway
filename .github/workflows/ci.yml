name: CI

on:
  push: {}
  pull_request:
    branches: [ main ]

permissions:
  contents: read

jobs:
  lint:
    name: Lint
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set up Go
        uses: actions/setup-go@v5
        with:
          go-version-file: go.mod
          cache: true

      - name: Run golangci-lint
        uses: golangci/golangci-lint-action@v7 
        with:
          version: v2.5.0                      
          args: --timeout=5m                   
          skip-cache: false                    

  tests:
    name: Tests
    runs-on: ubuntu-latest
    needs: lint
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set up Go
        uses: actions/setup-go@v5
        with:
          go-version-file: go.mod
          cache: true

      - name: Download modules
        run: make deps

      - name: Formatting check
        run: make fmt-check

      - name: Vet
        run: make vet

      - name: Build
        run: make build

      - name: Build (race)
        run: make build-race

      - name: Tests
        run: make test

      - name: Tests (race)
        run: make test-race

      - name: Go run (race smoke)
        continue-on-error: true
        run: |
          set -euo pipefail
          echo "Running go run -race (will stop after 5s)..."
          if timeout 5s make run-race; then
            echo "Race run finished cleanly"
          else
            status=$?
            if [ "$status" -eq 124 ]; then
              echo "Race run timed out (expected for long-running server)"
              exit 0
            else
              echo "Race run exited with status $status (continuing)"
              exit 0
            fi
          fi
